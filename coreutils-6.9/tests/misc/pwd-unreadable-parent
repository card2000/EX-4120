#!/bin/sh
# Ensure that pwd and "readlink -e ." work even when a parent directory
# is unreadable.  Perform this test only on systems with a usable getcwd
# function that has this capability.

# Copyright (C) 2007 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

if test "$VERBOSE" = yes; then
  set -x
  pwd --version
  readlink --version
fi

test $host_os != linux-gnu &&
  {
    echo 1>&2 "$0: vendor getcwd may be inadequate; skipping this test"
    (exit 77); exit 77
  }

# Linux ia64 has the gl_FUNC_GETCWD_ABORT_BUG, so we can't use
# the system getcwd.
test $REPLACE_GETCWD = 1 &&
  {
    echo 1>&2 "$0: can't use buggy system getcwd; skipping this test"
    (exit 77); exit 77
  }

pwd=`pwd`
t0=`echo "$0"|sed 's,.*/,,'`.tmp; tmp=$t0/$$
trap 'status=$?; cd "$pwd" && chmod -R u+rwx $t0 && rm -rf $t0 && exit $status' 0
trap '(exit $?); exit $?' 1 2 13 15

framework_failure=0
mkdir -p $tmp || framework_failure=1
cd $tmp || framework_failure=1

mkdir -p a/b || framework_failure=1
cd a/b || framework_failure=1
chmod a=x .. || framework_failure=1

if test $framework_failure = 1; then
  echo "$0: failure in testing framework" 1>&2
  (exit 1); exit 1
fi

pwd_exe=$pwd/../../src/pwd

fail=0
$pwd_exe > exp || fail=1
readlink -ev . > out || fail=1

cmp out exp || fail=1
test $fail = 1 && diff out exp 2> /dev/null

(exit $fail); exit $fail
